import{r as s}from"./CXT9O0q4.js";function w(){let r=s([]),i=s([]);async function c(){try{const e=await fetch("/api/groceryList/");if(!e.ok)throw new Error(`Failed to fetch lists: ${e.statusText}`);let t=(await e.json()).data;i.value=t.map(o=>({...o}))}catch(e){console.error("Error fetching lists:",e)}}async function d(e){try{const t=await fetch("/api/groceryList/store",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:e})});if(!t.ok)throw new Error(`Failed to create list: ${t.statusText}`);const o=await t.json();i.value.push(o)}catch(t){console.error("Error creating list:",t)}}async function l(e,t){console.log(`Sharing list with ID: ${e}`),$fetch("/api/groceryList/share",{method:"POST",headers:{"Content-Type":"application/json"},body:{id:e,email:t}})}async function h(e){try{const t=await fetch("/api/groceryList/favorite",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:e})});if(!t.ok)throw new Error(`Failed to create list: ${t.statusText}`)}catch(t){console.error("Error creating list:",t)}}async function y(e){try{const t=await fetch("/api/groceryList/delete",{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:e})});if(!t.ok)throw new Error(`Failed to create list: ${t.statusText}`)}catch(t){console.error("Error creating list:",t)}}async function p(e=null){try{const t=await fetch("/api/groceryListItem/",{method:"POST",body:JSON.stringify({listId:e}),headers:{"Content-Type":"application/json"}});if(!t.ok)throw new Error(`Failed to fetch items: ${t.statusText}`);let o=(await t.json()).data;r.value=o.map(a=>({...a,quantity:a.quantity||1}))}catch(t){console.error("Error fetching items:",t)}}async function u(e,t){const{data:o}=await $fetch("/api/groceryListItem/store",{method:"POST",headers:{"Content-Type":"application/json"},body:{name:e,quantity:1,listId:t}});r.value=[...r.value,o]}function n(e){r.value=r.value.filter(o=>o.name!==e.name),$fetch("/api/groceryListItem/delete",{method:"DELETE",headers:{"Content-Type":"application/json"},body:{id:e.id}})}function f(e){$fetch("/api/groceryListItem/checked",{method:"POST",headers:{"Content-Type":"application/json"},body:{id:e.id,checked:e.checked}})}function m(e){const t=r.value.find(a=>a.id===e.id);t.quantity+=1,$fetch("/api/groceryListItem/increase",{method:"POST",headers:{"Content-Type":"application/json"},body:{id:e.id}})}function T(e){const t=r.value.find(a=>a.id===e.id);if(t.quantity===1){n(e);return}t.quantity-=1,$fetch("/api/groceryListItem/decrease",{method:"POST",headers:{"Content-Type":"application/json"},body:{id:e.id}})}return{items:r,lists:i,fetchLists:c,favorite:h,createList:d,shareList:l,deleteList:y,fetchItems:p,addItem:u,checked:f,clearItem:n,increaseItems:m,decreaseItems:T}}export{w as u};
