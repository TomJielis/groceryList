import{r as n,n as L}from"./B1RyEDXr.js";function w(){let s=n([]),a=n([]);async function c(){try{const e=await fetch("/api/groceryList/");if(!e.ok)throw new Error(`Failed to fetch lists: ${e.statusText}`);let t=(await e.json()).data;a.value=t.map(o=>({...o}))}catch(e){console.error("Error fetching lists:",e)}}async function d(e){const t=await fetch("/api/groceryList/store",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:e})});if(!t.ok)throw new Error(`Failed to create list: ${t.statusText}`);const o=await t.json();if(!o.data)throw new Error(`Failed to create list: ${t.statusText}`);return o}async function l(e,t){$fetch("/api/groceryList/share",{method:"POST",headers:{"Content-Type":"application/json"},body:{id:e,email:t}})}async function h(e){const t=await fetch("/api/groceryList/favorite",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:e})});if(!t.ok)throw new Error(`Failed to create list: ${t.statusText}`);if(!(await t.json()).message)throw new Error(`Failed to create list: ${t.statusText}`)}async function u(e){try{const t=await fetch("/api/groceryList/delete",{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:e})});if(!t.ok)throw new Error(`Failed to create list: ${t.statusText}`)}catch(t){console.error("Error creating list:",t)}}async function f(e=null){try{const t=await fetch("/api/groceryListItem/",{method:"POST",body:JSON.stringify({listId:e}),headers:{"Content-Type":"application/json"}});if(!t.ok)throw new Error(`Failed to fetch items: ${t.statusText}`);let o=(await t.json()).data;s.value=o.map(i=>({...i,quantity:i.quantity||1}))}catch(t){console.error("Error fetching items:",t)}}async function y(e,t){const{data:o}=await $fetch("/api/groceryListItem/store",{method:"POST",headers:{"Content-Type":"application/json"},body:{name:e,quantity:1,listId:t}});s.value=[...s.value,o]}function r(e){s.value=s.value.filter(o=>o.name!==e.name),$fetch("/api/groceryListItem/delete",{method:"DELETE",headers:{"Content-Type":"application/json"},body:{id:e.id}})}function p(e){$fetch("/api/groceryListItem/checked",{method:"POST",headers:{"Content-Type":"application/json"},body:{id:e.id,checked:e.checked}})}function m(e){const t=s.value.find(i=>i.id===e.id);t.quantity+=1,$fetch("/api/groceryListItem/increase",{method:"POST",headers:{"Content-Type":"application/json"},body:{id:e.id}})}function T(e){const t=s.value.find(i=>i.id===e.id);if(t.quantity===1){r(e);return}t.quantity-=1,$fetch("/api/groceryListItem/decrease",{method:"POST",headers:{"Content-Type":"application/json"},body:{id:e.id}})}return{items:s,lists:a,fetchLists:c,favorite:h,createList:d,shareList:l,deleteList:u,fetchItems:f,addItem:y,checked:p,clearItem:r,increaseItems:m,decreaseItems:T}}const{fetchLists:g,lists:E}=w(),I=L("list",{state:()=>({lists:[]}),actions:{setList(s){this.lists=s},addList(s){this.lists.push(s)},removeList(s){this.lists=this.lists.filter(a=>a.id!==s)},clearList(){this.lists=[]},async fetchLists(){await g(),this.setList(E)}},persist:!0});export{I as a,w as u};
