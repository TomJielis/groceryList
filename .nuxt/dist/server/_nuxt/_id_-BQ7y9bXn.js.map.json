{"file":"_id_-BQ7y9bXn.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,MAAM,EAAE,OAAO,WAAA,IAAe,eAAA;AAEvB,MAAM,qBAAqB,YAAY,eAAe;AAAA,EACzD,OAAO,OAAO;AAAA,IACV,oBAAoB,CAAA;AAAA,IACpB,iBAAiB,CAAA;AAAA,IACjB,SAAS;AAAA,EAAA;AAAA,EAGb,SAAS;AAAA,IACL,oBAAoB,OAAO;AACvB,YAAM,MAAM,CAAC,GAAG,MAAM,oBAAoB,GAAG,MAAM,eAAe;AAClE,YAAM,2BAAW,IAAA;AACjB,aAAO,IAAI,OAAO,CAAC,SAAS;AACxB,cAAM,QAAQ,KAAK,KAAK,YAAA;AACxB,YAAI,KAAK,IAAI,KAAK,EAAG,QAAO;AAC5B,aAAK,IAAI,KAAK;AACd,eAAO;AAAA,MACX,CAAC;AAAA,IACL;AAAA,EAAA;AAAA,EAGJ,SAAS;AAAA,IACL,MAAM,mBAAmB;AACrB,YAAM,WAAA;AACN,WAAK,UAAU;AACf,UAAI;AACA,aAAK,qBAAqB;AAG1B,cAAM,MAAM,MAAM;AAClB,aAAK,kBAAkB,MAAM,QAAQ,GAAG,IAClC,IAAI,OAAO,CAAC,SAAc,KAAK,OAAO,EAAE,IAAI,CAAC,UAAe,EAAE,MAAM,KAAK,MAAM,SAAS,QAAQ,IAChG,CAAA;AAAA,MAEV,SAAS,OAAO;AACZ,gBAAQ,MAAM,gCAAgC,KAAK;AAAA,MACvD,UAAA;AACI,aAAK,UAAU;AAAA,MACnB;AAAA,IACJ;AAAA,EAAA;AAER,CAAC;;;;;;ACvCD,UAAM;AAAA,MAEJ,OAAAA;AAAA,MACA,YAAAC;AAAA,IAGF,IAAI,eAAA;AAGJ,UAAM,kBAAkB,mBAAA;AAKxB,UAAM,QAAQ,SAAA;AACd,UAAM,SAAS,SAAS,MAAM,OAAO,EAAY;AAEjD,UAAM,UAAU,IAAI,EAAE;AActB,UAAM,sBAAsB,SAAS,MAAM;AACzC,YAAM,cAAc,gBAAgB,oBAAoB;AAAA,QAAO,CAAA,SAC3D,KAAK,KAAK,YAAA,EAAc,SAAS,QAAQ,MAAM,YAAA,CAAa;AAAA,MAAA;AAEhE,YAAM,cAAc,YAAY,KAAK,CAAA,SAAQ,KAAK,KAAK,YAAA,MAAkB,QAAQ,MAAM,YAAA,CAAa;AACpG,aAAO,QAAQ,SAAS,CAAC,cAAc,CAAC,EAAE,MAAM,QAAQ,OAAO,SAAQ,MAAA,GAAS,GAAG,WAAW,IAAI;AAAA,IACpG,CAAC;AAED,IAAAA,YAAW,MAAM;;mBAGVC,eAAAC,WAAA,EAAA,OAAM,kBAAc,MAAA,CAAA,kIAKN,QAAA,KAAO;AAMCC,oBAAA,oBAAA,QAAR,SAAI;;6NAMyCC,eAAAC,MAAAN,MAAA,EAAM,KAAK,CAAA,aAAY,SAAS,KAAK,kBAAkB,KAAK,KAAK,YAAA,CAAW,IAAA,mBAAA,YAAA,qBACzHM,MAAAN,MAAA,EAAM,OAAO,CAAAO,WAASA,MAAK,OAAO,EAAE,KAAK,CAAA,aAAY,SAAS,KAAK,kBAAkB,KAAK,KAAK,YAAA,CAAW,IAAA,OAAA,GAAA,2DAE9DC,eAAA,KAAK,IAAI;YAEbF,MAAAN,MAAA,EAAM,OAAO,CAAAO,WAASA,MAAK,OAAO,EAAE,KAAK,CAAA,aAAY,SAAS,KAAK,YAAA,MAAkB,KAAK,KAAK,YAAA,CAAW,GAAA;AAQjJ,gBAAA,kSAAAC,iBAAAF,WAAAN,MAAA,EAAM,KAAK,cAAY,SAAS,KAAK,kBAAkB,KAAK,KAAK,YAAA,OAAjEM,mBAAiF,aAAQ,CAAA,CAAA,SAAA;cAIrFA,MAAAN,MAAA,EAAM,OAAO,CAAAO,WAASA,MAAK,OAAO,EAAE,KAAK,CAAA,aAAY,SAAS,KAAK,YAAA,MAAkB,KAAK,KAAK,YAAA,CAAW,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEpI,UAAM,YAAY,aAAA;AAElB,UAAM,QAAQ,SAAA;AACd,UAAM,SAAS,MAAM,OAAO;AAG5B,UAAM,cAAc,IAAI,KAAK;AAC7B,UAAM,mBAAmB,IAAI,KAAK;AACZ,QAAI,KAAK;AAChB,QAAI,CAAC;AAGpB,UAAM;AAAA,MACJ,OAAAP;AAAA,MACA,YAAAC;AAAA,IAKF,IAAI,eAAA;AAGJ,KAAA,QAAA,SAAA,IAAAQ,iBAAA,MAAMR,YAAW,MAAM,CAAA;AAGvB,aAAS,kBAAkB;AACzB,kBAAY,QAAQ;AACpB,MAAAA,YAAW,MAAM;AAAA,IACnB;AAEA,UAAM,iBAAiB,SAAS,MAAMD,OAAM,MAAM,OAAO,CAAC,SAAc,CAAC,KAAK,OAAO,CAAC;AACtF,UAAM,eAAe,SAAS,MAAMA,OAAM,MAAM,OAAO,CAAC,SAAc,KAAK,OAAO,CAAC;AAqBpE,QAAI,CAAC;AA0BpB,mBAAe,uBAAuB;AACpC,kBAAY,QAAQ;AACpB,YAAMC,YAAW,MAAM;AAAA,IACzB;AAGA,UAAM,OAAO,UAAU,MAAM,KAAK,CAACS,UAAcA,MAAK,MAAM,SAAS,MAAM,CAAC;;;mBAMtER,eAAAC,WAAA,EAAA,OAAM,yCAAqC,MAAA,CAAA,wFAKQK,gBAAAF,WAAA,IAAA,MAAAA,mBAAM,IAAI;WAEnD,YAAA,OAAW;;UAED,MAAK;AAAA,UAAgB,OAAM;AAAA,QAAA;AAExBF,sBAAA,eAAA,QAAR,SAAI;2SASUO,eAAA,EAAA,SAAA,KAAK,cAAW,IAAA,IAAA,GAAA,oHAMAA,eAAA,EAAA,WAAA,cAAA,KAAK,eAAW,CAAA,OAAA,iGAKvCC,sBAAA,KAAK,OAAO,IAAA,aAAA,mCAKkBP,eAAA,CAAA,EAAA,8BAAA,KAAK,QAAA,GAAO,0DAAA,CAAA,sBAEnDG,eAAA,KAAK,IAAI,iWAYTA,eAAA,KAAK,YAAQ,CAAA;;;AAad,YAAA,aAAA,MAAa,QAAM;2HAIxB,iBAAA,QAAgB,SAAA,MAAA,oBAAwCA,eAAA,aAAA,MAAa,MAAM;;;;YAEtE,iBAAA,OAAgB;;YACN,MAAK;AAAA,YAAgB,OAAM;AAAA,UAAA;AAExBJ,wBAAA,aAAA,QAAR,SAAI;6SASUO,eAAA,EAAA,SAAA,KAAK,cAAW,IAAA,IAAA,GAAA,oHAMAA,eAAA,EAAA,WAAA,cAAA,KAAK,eAAW,CAAA,OAAA,iGAKvCC,sBAAA,KAAK,OAAO,IAAA,aAAA,mCAKkBP,eAAA,CAAA,EAAA,8BAAA,KAAK,QAAA,GAAO,0DAAA,CAAA,sBAEnDG,eAAA,KAAK,IAAI,iWAYTA,eAAA,KAAK,YAAQ,CAAA;;;;;;;;;;UAsBV,aAAY;AAAA,UAAkB,SAAO;AAAA,QAAA;;;;;;;;;;;;;;","names":["items","fetchItems","_ssrRenderAttrs","_mergeProps","_ssrRenderList","_ssrRenderClass","_unref","item","_ssrInterpolate","_withAsyncContext","list","_ssrRenderStyle","_ssrIncludeBooleanAttr"],"sources":["../../../../stores/suggestions.ts","../../../../components/list/AddItemListForm.vue","../../../../pages/list/[id].vue"],"sourcesContent":["// stores/suggestions.ts\nimport {defineStore} from 'pinia'\nimport grocerySuggestions from '~/data/suggestions.json';\nimport {useGroceryList} from \"~/composables/useGroceryList\";\nconst { items, fetchItems } = useGroceryList();\n\nexport const useSuggestionStore = defineStore('suggestions', {\n    state: () => ({\n        defaultSuggestions: [] as { name: string }[],\n        userSuggestions: [] as { name: string }[],\n        loading: false,\n    }),\n\n    getters: {\n        combinedSuggestions(state) {\n            const all = [...state.defaultSuggestions, ...state.userSuggestions]\n            const seen = new Set()\n            return all.filter((item) => {\n                const lower = item.name.toLowerCase()\n                if (seen.has(lower)) return false\n                seen.add(lower)\n                return true\n            })\n        },\n    },\n\n    actions: {\n        async fetchSuggestions() {\n            await fetchItems();\n            this.loading = true\n            try {\n                this.defaultSuggestions = grocerySuggestions\n\n\n                const res = items.value;\n                this.userSuggestions = Array.isArray(res)\n                    ? res.filter((item: any) => item.checked).map((item: any) => ({ name: item.name, checked: false }))\n                    : []\n                // this.userSuggestions = (Array.isArray(res.data) ? res.data : []).map((item: any) => ({name: item.name}));\n            } catch (error) {\n                console.error('Fout bij ophalen suggesties:', error)\n            } finally {\n                this.loading = false\n            }\n        },\n    },\n})\n","<script setup lang=\"ts\">\nimport {ref, computed} from 'vue';\nimport {useRoute} from 'vue-router';\nimport {useGroceryList} from '~/composables/useGroceryList';\nimport { useSuggestionStore } from '~/stores/suggestions'\n\nimport suggestionsData from '~/data/suggestions.json';\nconst {\n  addItem,\n  items,\n  fetchItems,\n  increaseItems,\n  decreaseItems\n} = useGroceryList();\nconst emit = defineEmits(['item-added', 'close']);\n\nconst suggestionStore = useSuggestionStore()\n\nonMounted(() => {\n  suggestionStore.fetchSuggestions()\n})\nconst route = useRoute();\nconst listId = parseInt(route.params.id as string)\n\nconst newItem = ref('');\n\n\nasync function addItemToList(itemName: string) {\n  const name = itemName.trim();\n  if (!name) return;\n\n  await addItem(name, listId);\n\n  await fetchItems(listId);\n\n  newItem.value = '';\n}\n\nconst filteredSuggestions = computed(() => {\n  const suggestions = suggestionStore.combinedSuggestions.filter(item =>\n      item.name.toLowerCase().includes(newItem.value.toLowerCase())\n  );\n  const isDuplicate = suggestions.some(item => item.name.toLowerCase() === newItem.value.toLowerCase());\n  return newItem.value && !isDuplicate ? [{ name: newItem.value, checked:false }, ...suggestions] : suggestions;\n});\n\nfetchItems(listId)\n</script>\n<template>\n  <div class=\"min-h-screen\">\n    <div class=\"flex-auto overflow-y-auto p-4 pb-20\">\n      <div class=\"items-center flex-col\">\n        <input\n            type=\"text\"\n            v-model=\"newItem\"\n            placeholder=\"Enter new item\"\n            class=\"w-full mb-3 px-4 py-3 rounded-xl border border-gray-300 focus:ring-2 focus:ring-blue-400 focus:border-blue-400 text-base sm:text-lg md:text-xl\"\n        />\n        <ul class=\"space-y-3\">\n          <li\n              v-for=\"item in filteredSuggestions\"\n              :key=\"item.name\"\n              class=\"flex items-center justify-between bg-white rounded-xl shadow-sm p-3 sm:p-4 md:p-5\"\n          >\n            <div class=\"flex items-center justify-between w-full\">\n              <div class=\"flex items-center space-x-2\">\n                <button @click=\"addItemToList(item.name)\" :class=\"items.some(listItem => listItem.name.toLowerCase() === item.name.toLowerCase()) ? 'text-green-500' : 'text-black'\">\n                  {{ items.filter(item => !item.checked).some(listItem => listItem.name.toLowerCase() === item.name.toLowerCase()) ? '✔️' : '➕' }}\n                </button>\n                <span class=\"text-sm sm:text-base md:text-lg\">{{ item.name }}</span>\n              </div>\n              <div class=\"flex items-center space-x-2\" v-if=\"items.filter(item => !item.checked).some(listItem => listItem.name.toLowerCase() === item.name.toLowerCase())\">\n                <button\n                    class=\"w-8 h-8 sm:w-9 sm:h-9 flex items-center justify-center bg-gray-200 rounded-full text-base sm:text-lg font-bold hover:bg-gray-300\"\n                    @click=\"decreaseItems(items.find(listItem => listItem.name.toLowerCase() === item.name.toLowerCase()))\"\n                >−\n                </button>\n\n                <span class=\"text-sm sm:text-base font-semibold min-w-[20px] sm:min-w-[24px] text-center\">\n                   {{ items.find(listItem => listItem.name.toLowerCase() === item.name.toLowerCase())?.quantity ?? 1 }}\n                </span>\n\n                <button\n                    v-if=\"items.filter(item => !item.checked).some(listItem => listItem.name.toLowerCase() === item.name.toLowerCase())\"\n                    class=\"w-8 h-8 sm:w-9 sm:h-9 flex items-center justify-center bg-gray-200 rounded-full text-base sm:text-lg font-bold hover:bg-gray-300\"\n                    @click=\"increaseItems(items.find(listItem => listItem.name.toLowerCase() === item.name.toLowerCase()))\"\n                >+\n                </button>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <div class=\"fixed bottom-0 left-0 w-full mt-6 space-y-3 p-4\">\n      <button\n          class=\"w-full py-3 rounded-xl bg-gray-200 text-gray-700 font-medium text-base hover:bg-gray-300 transition\"\n          @click=\"$emit('close')\"\n      >\n        ← Back\n      </button>\n    </div>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { ref, computed } from 'vue';\nimport { useRoute } from 'vue-router';\nimport AddItemListForm from '~/components/list/AddItemListForm.vue';\nimport { useGroceryList } from '~/composables/useGroceryList';\nimport {useListStore} from \"~/stores/lists\";\n\ndefinePageMeta({\n  middleware: 'auth',\n});\n\nconst listStore = useListStore();\n\nconst route = useRoute();\nconst listId = route.params.id as string;\n\n// UI state\nconst showAddItem = ref(false);\nconst showCheckedItems = ref(false);\nconst pullToRefresh = ref(false); // New state for pull-to-refresh\nconst startY = ref(0); // Track the starting Y position of the touch\n\n// Composable for grocery list logic\nconst {\n  items,\n  fetchItems,\n  increaseItems,\n  decreaseItems,\n  clearItem,\n  checked,\n} = useGroceryList();\n\n// Fetch list items on page load\nawait fetchItems(listId);\n\n// Handler after new item is added\nfunction handleItemAdded() {\n  showAddItem.value = false;\n  fetchItems(listId); // FIXME: Should be reactive in composable ideally\n}\n\nconst uncheckedItems = computed(() => items.value.filter((item: any) => !item.checked));\nconst checkedItems = computed(() => items.value.filter((item: any) => item.checked));\n\n// Pull-to-refresh logic\nfunction handleTouchStart(event: TouchEvent) {\n  startY.value = event.touches[0].clientY;\n}\n\nfunction handleTouchMove(event: TouchEvent) {\n  const currentY = event.touches[0].clientY;\n  if (currentY - startY.value > 50) {\n    pullToRefresh.value = true;\n  }\n}\n\nasync function handleTouchEnd() {\n  if (pullToRefresh.value) {\n    pullToRefresh.value = false;\n    await fetchItems(listId); // Refresh the list\n  }\n}\n\nconst startX = ref(0);\n\nfunction startSwipe(event, item) {\n  startX.value = event.touches[0].clientX;\n  item.swipeOffset = 0;\n}\n\nfunction moveSwipe(event, item) {\n  const currentX = event.touches[0].clientX;\n  const deltaX = currentX - startX.value;\n\n  if (deltaX < 0) {\n    item.swipeOffset = deltaX; // Alleen naar links swipen\n  }\n}\n\nfunction endSwipe(event, item) {\n  if (item.swipeOffset < -window.innerWidth / 2) {\n    // Als meer dan 50% van de breedte is geswiped, verwijder het item\n    clearItem(item);\n  } else {\n    // Reset swipe\n    item.swipeOffset = 0;\n  }\n}\n\nasync function closeAddItemListForm() {\n  showAddItem.value = false;\n  await fetchItems(listId);\n}\n\n\nconst list = listStore.lists.find((list: any) => list.id == parseInt(listId));\n\n</script>\n\n<template>\n  <div\n      class=\"max-w-screen-xl p-4 overflow-y-auto\"\n      @touchstart=\"handleTouchStart\"\n      @touchmove=\"handleTouchMove\"\n      @touchend=\"handleTouchEnd\"\n  >\n    <h1 class=\"text-2xl font-bold mb-4 text-center\">🛒 {{list?.name}}</h1>\n\n    <div v-if=\"!showAddItem\">\n      <ul class=\"space-y-3 mb-20\">\n        <transition-group name=\"fade\" tag=\"ul\" class=\"space-y-3 mb-20\">\n          <li\n              v-for=\"item in uncheckedItems\"\n              :key=\"item.id\"\n              class=\"flex items-center justify-between bg-white rounded-xl shadow-sm p-3 active:shadow-md transition relative overflow-hidden\"\n              @touchstart=\"startSwipe($event, item)\"\n              @touchmove=\"moveSwipe($event, item)\"\n              @touchend=\"endSwipe($event, item)\"\n          >\n            <div\n                class=\"absolute inset-0 bg-red-200 text-white flex items-center justify-center transition-opacity pointer-events-none\"\n                :style=\"{ opacity: item.swipeOffset < 0 ? 1 : 0 }\"\n            >\n              Verwijderen\n            </div>\n            <div\n                class=\"relative flex items-center flex-1 transition-transform\"\n                :style=\"{ transform: `translateX(${item.swipeOffset || 0}px)` }\"\n            >\n              <input\n                  type=\"checkbox\"\n                  class=\"h-6 w-6 text-green-600 rounded flex-shrink-0\"\n                  :checked=\"item.checked\"\n                  @change=\"checked({ ...item, checked: $event.target.checked }); item.checked = $event.target.checked\"\n              />\n              <span\n                  class=\"text-base font-medium break-words whitespace-normal ml-2\"\n                  :class=\"{ 'line-through text-gray-500': item.checked }\"\n              >\n                {{ item.name }}\n              </span>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n              <button\n                  class=\"w-8 h-8 sm:w-9 sm:h-9 flex items-center justify-center bg-gray-200 rounded-full text-base sm:text-lg font-bold hover:bg-gray-300\"\n                  @click=\"decreaseItems(item)\"\n              >\n                −\n              </button>\n\n              <span class=\"text-sm sm:text-base font-semibold min-w-[20px] sm:min-w-[24px] text-center\">\n                {{ item.quantity || 1 }}\n              </span>\n\n              <button\n                  class=\"w-8 h-8 sm:w-9 sm:h-9 flex items-center justify-center bg-gray-200 rounded-full text-base sm:text-lg font-bold hover:bg-gray-300\"\n                  @click=\"increaseItems(item)\"\n              >\n                +\n              </button>\n            </div>\n          </li>\n        </transition-group>\n        <p\n            v-if=\"checkedItems.length\"\n            class=\"text-center text-gray-700 mt-4 cursor-pointer hover:underline\"\n            @click=\"showCheckedItems = !showCheckedItems\"\n        >\n          {{ showCheckedItems ? 'Hide' : 'Show' }} checked items ({{ checkedItems.length }})\n        </p>\n        <ul v-if=\"showCheckedItems\" class=\"space-y-3 mt-4\">\n          <transition-group name=\"fade\" tag=\"ul\" class=\"space-y-3 mb-20\">\n            <li\n                v-for=\"item in checkedItems\"\n                :key=\"item.id\"\n                class=\"flex items-center justify-between bg-white rounded-xl shadow-sm p-3 active:shadow-md transition relative overflow-hidden\"\n                @touchstart=\"startSwipe($event, item)\"\n                @touchmove=\"moveSwipe($event, item)\"\n                @touchend=\"endSwipe($event, item)\"\n            >\n              <div\n                  class=\"absolute inset-0 bg-red-200 text-white flex items-center justify-center transition-opacity pointer-events-none\"\n                  :style=\"{ opacity: item.swipeOffset < 0 ? 1 : 0 }\"\n              >\n                Verwijderen\n              </div>\n              <div\n                  class=\"relative flex items-center flex-1 transition-transform\"\n                  :style=\"{ transform: `translateX(${item.swipeOffset || 0}px)` }\"\n              >\n                <input\n                    type=\"checkbox\"\n                    class=\"h-6 w-6 text-green-600 rounded flex-shrink-0\"\n                    :checked=\"item.checked\"\n                    @change=\"checked({ ...item, checked: $event.target.checked }); item.checked = $event.target.checked\"\n                />\n                <span\n                    class=\"text-base font-medium break-words whitespace-normal ml-2\"\n                    :class=\"{ 'line-through text-gray-500': item.checked }\"\n                >\n                  {{ item.name }}\n                </span>\n              </div>\n              <div class=\"flex items-center space-x-2\">\n                <button\n                    class=\"w-8 h-8 sm:w-9 sm:h-9 flex items-center justify-center bg-gray-200 rounded-full text-base sm:text-lg font-bold hover:bg-gray-300\"\n                    @click=\"decreaseItems(item)\"\n                >\n                  −\n                </button>\n\n                <span class=\"text-sm sm:text-base font-semibold min-w-[20px] sm:min-w-[24px] text-center\">\n                  {{ item.quantity || 1 }}\n                </span>\n\n                <button\n                    class=\"w-8 h-8 sm:w-9 sm:h-9 flex items-center justify-center bg-gray-200 rounded-full text-base sm:text-lg font-bold hover:bg-gray-300\"\n                    @click=\"increaseItems(item)\"\n                >\n                  +\n                </button>\n              </div>\n            </li>\n          </transition-group>\n        </ul>\n      </ul>\n      <button\n          class=\"fixed bottom-6 right-6 bg-blue-500 text-white w-14 h-14 flex items-center justify-center rounded-full shadow-lg hover:bg-blue-600 active:scale-95 transition\"\n          @click=\"showAddItem = true\"\n      >\n        ➕\n      </button>\n    </div>\n    <div v-else>\n      <AddItemListForm @item-added=\"handleItemAdded\" @close=\"closeAddItemListForm\" />\n    </div>\n  </div>\n</template>\n<style scoped>\n.fade-enter-active, .fade-leave-active {\n  transition: opacity 0.7s ease;\n}\n.fade-enter-from, .fade-leave-to {\n  opacity: 0;\n}\n</style>"],"version":3}