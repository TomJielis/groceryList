{"version":3,"file":"index-D20FGvVP.js","sources":["../../../../components/dashboard/topItems.vue","../../../../components/dashboard/dashboardBlock.vue","../../../../pages/index.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport {useGroceryList} from \"~/composables/useGroceryList\";\n\nconst { items, fetchItems } = useGroceryList();\nawait fetchItems()\nlet topFive = ref(items.value.filter(item => !item.checked).sort((a, b) => b.quantity - a.quantity).slice(0, 5));\n</script>\n<template>\n  <div class=\"bg-white rounded-lg shadow p-6\">\n    <div class=\"flex justify-between mb-4\">\n      <span class=\"text-gray-500 flex-1 text-left\">Item</span>\n      <span class=\"text-gray-500 flex-1 text-right\">Quantity</span>\n    </div>\n    <ul class=\"divide-y divide-gray-200\">\n      <li class=\"py-2 flex justify-center items-center text-center\" v-for=\"item in topFive\" :key=\"item.name\">\n        <span class=\"flex-1 text-left\">{{ item.name }}</span>\n        <span class=\"flex-1 text-right\">{{ item.quantity }}</span>\n      </li>\n    </ul>\n  </div>\n</template>\n","<script setup lang=\"ts\">\n  defineProps<{ title: string, count: number}>();\n</script>\n<template>\n  <div class=\"bg-white rounded-lg shadow p-6 flex flex-col items-center\">\n    <span class=\"text-4xl font-bold text-green-600\">{{ count }}</span>\n    <span class=\"text-gray-500 mt-2\">{{ title }}</span>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport TopItems from \"~/components/dashboard/topItems.vue\";\nimport DashboardBlock from \"~/components/dashboard/dashboardBlock.vue\";\nimport {useGroceryList} from \"~/composables/useGroceryList\";\nimport { useAuthStore} from \"~/stores/auth\";\nimport { useRouter } from 'vue-router';\nimport {useListStore} from \"~/stores/lists\";\nimport {useCards} from \"~/composables/useCards\";\n\n\nconst {cards, getCards} = useCards();\nawait getCards();\nconst listStore = useListStore();\nconst authStore = useAuthStore();\ndefinePageMeta({\n  middleware: 'auth',\n});\n\nconst router = useRouter();\n\nif(!authStore.user) {\n  router.push('/auth/login');\n}\n\nconst { lists, fetchLists } = useGroceryList();\nawait fetchLists();\n\nlistStore.setList(lists.value);\nlet totalUncheckedItems = ref(\n    lists.value.reduce(\n        (total, list) =>\n            total + (list.grocery_list_items_count - list.grocery_list_items_checked_count),\n        0\n    )\n);\nlet countLists = ref(lists.value.length ?? 0)\nconst favoriteListId = authStore.user?.favorite_list_id;\nconst favoriteListUrl = favoriteListId ? `/list/${favoriteListId}` : '/list/lists';\nconst favoriteList = lists.value.filter(\n    (list) => list.id === favoriteListId\n)[0] ?? { grocery_list_items_count: 0, grocery_list_items_checked_count: 0 };\nconst favoriteListOpenItems = favoriteList.grocery_list_items_count - favoriteList.grocery_list_items_checked_count;\n\n</script>\n\n<template>\n  <div class=\"h-[90vh] p-8 overflow-auto\">\n    <div class=\"max-w-3xl mx-auto\">\n      <h1 class=\"text-3xl font-bold text-green-700 mb-6 text-center\">\n        Grocery Shopping List Dashboard\n      </h1>\n      <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n        <dashboardBlock :title=\"'total items to buy'\" :count=\"totalUncheckedItems\" @click=\"$router.push('/list/lists')\" class=\"cursor-pointer\"/>\n        <dashboardBlock :title=\"'cards'\" :count=\"cards.length\" @click=\"$router.push('/cards/')\" class=\"cursor-pointer\"/>\n        <dashboardBlock v-if=\"authStore.user?.favorite_list_id > 0\" :title=\"favoriteListOpenItems + ' items to buy'\" :count=\"' ⭐' + favoriteList.name\"   @click=\"$router.push(favoriteListUrl)\" class=\"cursor-pointer\"/>\n        <dashboardBlock v-if=\"authStore.user?.favorite_list_id === null\" :title=\"'Lists'\" @click=\"$router.push('/list/lists')\" :count=\"parseInt(countLists)\" class=\"cursor-pointer\" />\n      </div>\n      <topItems />\n    </div>\n  </div>\n</template>"],"names":["_withAsyncContext","_ssrRenderAttrs","_mergeProps","_ssrRenderList","_unref","_ssrInterpolate","count","title","$router"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAGA,UAAM,EAAE,OAAO,WAAA,IAAe,eAAA;AAC9B,KAAA,QAAA,SAAA,IAAAA,iBAAA,MAAM,YAAW;AACjB,QAAI,UAAU,IAAI,MAAM,MAAM,OAAO,CAAA,SAAQ,CAAC,KAAK,OAAO,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,GAAG,CAAC,CAAC;;AAGxG,YAAA,OAAAC,eAAAC,WAAA,EAAA,OAAM,oCAAgC,MAAA,CAAA,CAAA,kNAAA;AAMsCC,oBAAAC,MAAA,OAAA,IAAR,SAAI;8GACrCC,eAAA,KAAK,IAAI,2CACRA,eAAA,KAAK,QAAQ;;;;;;;;;;;;;;;;;;;;;mBCZjDJ,eAAAC,WAAA,EAAA,OAAM,+DAA2D,MAAA,CAAA,oEACjBI,KAAAA,KAAK,2DACpBC,KAAAA,KAAK;;;;;;;;;;;;;;;;ACI7C,UAAM,EAAC,OAAO,SAAA,IAAY,SAAA;AAC1B,KAAA,QAAA,SAAA,IAAAP,iBAAA,MAAM,UAAS;AACf,UAAM,YAAY,aAAA;AAClB,UAAM,YAAY,aAAA;AAKlB,UAAM,SAAS,UAAA;AAEf,QAAG,CAAC,UAAU,MAAM;AAClB,aAAO,KAAK,aAAa;AAAA,IAC3B;AAEA,UAAM,EAAE,OAAO,WAAA,IAAe,eAAA;AAC9B,KAAA,QAAA,SAAA,IAAAA,iBAAA,MAAM,YAAW;AAEjB,cAAU,QAAQ,MAAM,KAAK;AAC7B,QAAI,sBAAsB;AAAA,MACtB,MAAM,MAAM;AAAA,QACR,CAAC,OAAO,SACJ,SAAS,KAAK,2BAA2B,KAAK;AAAA,QAClD;AAAA,MAAA;AAAA,IACJ;AAEJ,QAAI,aAAa,IAAI,MAAM,MAAM,UAAU,CAAC;AAC5C,UAAM,kBAAiB,eAAU,SAAV,mBAAgB;AACvC,UAAM,kBAAkB,iBAAiB,SAAS,cAAc,KAAK;AACrE,UAAM,eAAe,MAAM,MAAM;AAAA,MAC7B,CAAC,SAAS,KAAK,OAAO;AAAA,IAAA,EACxB,CAAC,KAAK,EAAE,0BAA0B,GAAG,kCAAkC,EAAA;AACzE,UAAM,wBAAwB,aAAa,2BAA2B,aAAa;;;AAK5E,YAAA,OAAAC,eAAAC,WAAA,EAAA,OAAM,gCAA4B,MAAA,CAAA,CAAA,+LAAA;;QAMhB,OAAO;AAAA,QAAuB,OAAOE,MAAA,mBAAA;AAAA,QAAsB,SAAK,CAAA,WAAEI,KAAAA,QAAQ,KAAI,aAAA;AAAA,QAAiB,OAAM;AAAA,MAAA;;QACrG,OAAO;AAAA,QAAU,OAAOJ,MAAA,KAAA,EAAM;AAAA,QAAS,SAAK,CAAA,WAAEI,KAAAA,QAAQ,KAAI,SAAA;AAAA,QAAa,OAAM;AAAA,MAAA;YACxEJ,MAAAA,MAAA,SAAA,EAAU,SAAVA,gBAAAA,IAAgB,oBAAgB,GAAA;;UAAO,OAAO,wBAAqB;AAAA,UAAqB,OAAK,OAASA,MAAA,YAAA,EAAa;AAAA,UAAS,SAAK,CAAA,WAAEI,KAAAA,QAAQ,KAAKJ,MAAA,eAAA,CAAe;AAAA,UAAG,OAAM;AAAA,QAAA;;;;YACxKA,WAAA,SAAA,EAAU,SAAVA,mBAAgB,sBAAgB,MAAA;;UAAY,OAAO;AAAA,UAAU,SAAK,CAAA,WAAEI,KAAAA,QAAQ,KAAI,aAAA;AAAA,UAAkB,OAAO,SAASJ,MAAA,UAAA,CAAU;AAAA,UAAG,OAAM;AAAA,QAAA;;;;;;;;;;;;;;;;"}